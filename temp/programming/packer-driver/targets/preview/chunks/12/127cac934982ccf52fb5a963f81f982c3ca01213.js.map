{"version":3,"sources":["file:///Users/playgendary/wn/1/test_rockstone/assets/scripts/FieldWatcher.ts"],"names":["_decorator","Component","Node","SpriteFrame","Sprite","director","Vec2","instantiate","Prefab","Events","Item","ccclass","property","FieldWatcher","initialItems","_sideSquare","_fieldArray","onLoad","makeCells","makeItems","inputCatcher","active","onEnable","handleSubscription","onDisable","activated","func","ItemChosen","onItemChosen","ItemDropped","onItemDropped","item","newNumbers","defineCell","getPosition","newItemPosition","node","getChildByName","y","x","position","emit","ItemSet","fusionItems","defineNumbers","i","heightField","needingIndex","indexOf","defineCellPosition","itemNumbers","itemPosition","numberColumn","Math","floor","lengthField","numberStroke","numeralItems","length","newItem","itemPrefab","itemScript","getComponent","type","setType","numbers","chooseNumbers","zeroCell","deltaX","deltaY","setParent","newPositionNode","setPosition","spriteCell","height","j","newCell","addComponent","spriteFrame","set","movedItem","previousItem","oldNumbers","previousItemScript","movedItemScript","dropItem","transformationItem","numbersCopy","findFreeCell","transferItem","random","distance","currentDistance","sqrt","pow"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, Sprite, director, Vec3, Vec2, instantiate, Prefab, Enum } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport ItemType from './ItemType';\nimport Events from './Events';\nimport { Item } from './Item';\n\n@ccclass('FieldWatcher')\nexport class FieldWatcher extends Component {\n    @property\n    private lengthField: number = 3;\n    @property\n    private heightField: number = 2;\n    @property(SpriteFrame)\n    private spriteCell: SpriteFrame = null;\n\n    @property(Node)\n    private inputCatcher: Node = null;\n\n    @property(Prefab)\n    private itemPrefab: Prefab = null;\n\n    //    @property([])\n    private initialItems;\n\n    private _sideSquare: number = 0;\n\n    private _fieldArray: Array<Array<Node>> = [];\n\n    onLoad() {\n        this.makeCells();\n        this.makeItems();\n        this.inputCatcher.active = false;\n        this.initialItems = [1, 1, 2];\n    }\n\n    onEnable() {\n        this.handleSubscription(true);\n    }\n\n    onDisable() {\n        this.handleSubscription(false);\n    }\n\n    private handleSubscription(activated) {\n        const func = activated ? 'on' : 'off';\n        director[func](Events.ItemChosen, this.onItemChosen, this);\n        director[func](Events.ItemDropped, this.onItemDropped, this);\n    }\n\n    onItemDropped(item: Node) {\n        let newNumbers = this.defineCell(item.getPosition());\n        const newItemPosition = this.node.getChildByName(`h${newNumbers.y}l${newNumbers.x}`).position;\n        director.emit(Events.ItemSet, newItemPosition);\n        this.fusionItems(item, newNumbers);\n    }\n\n    private defineNumbers(item: Node): Vec2 {\n        for (let i = 0; i < this.heightField; i++) {\n            const needingIndex = this._fieldArray[i].indexOf(item);\n            if (needingIndex !== -1) return new Vec2(needingIndex, i);\n        }\n    }\n\n    onItemChosen() {\n        this.inputCatcher.active = true;\n    }\n\n    private defineCellPosition(itemNumbers: Vec2): Vec3 {\n        return this.node.getChildByName(`h${itemNumbers.y}l${itemNumbers.x}`).position;\n    }\n\n    private defineCell(itemPosition: Vec3): Vec2 {\n        const numberColumn = Math.floor(itemPosition.x / this._sideSquare + this.lengthField / 2 - 1) + 1;\n        const numberStroke = Math.floor(itemPosition.y / this._sideSquare + this.heightField / 2 - 1) + 1;\n        return new Vec2(numberColumn, numberStroke);\n    }\n\n    private makeItems() {\n        const numeralItems = this.initialItems.length;\n        for (let i = 0; i < numeralItems; i++) {\n            const newItem = instantiate(this.itemPrefab);\n            const itemScript = newItem.getComponent(Item);\n            itemScript.type = this.initialItems[i];\n            itemScript.setType(itemScript.type);\n            const numbers = this.chooseNumbers();\n            const zeroCell = this.node.getChildByName('h0l0').position;\n            itemScript.deltaX = -zeroCell.x;\n            itemScript.deltaY = -zeroCell.y;\n            newItem.setParent(this.node);\n            const newPositionNode = this.node.getChildByName(`h${numbers.y}l${numbers.x}`);\n            newItem.setPosition(newPositionNode.position);\n            this._fieldArray[numbers.y][numbers.x] = newItem;\n        }\n    }\n\n    private makeCells() {\n        this._sideSquare = this.spriteCell.height;\n        if (this.lengthField && this.heightField && this.spriteCell) {\n            for (let i = 0; i < this.heightField; i++) {\n                this._fieldArray[i] = [];\n                for (let j = 0; j < this.lengthField; j++) {\n                    this._fieldArray[i][j] = null;\n                    const newCell = new Node(`h${i}l${j}`);\n                    const spriteCell = newCell.addComponent(Sprite);\n                    spriteCell.spriteFrame = this.spriteCell;\n                    newCell.setParent(this.node);\n                    newCell.position.set(\n                        (j - this.lengthField / 2 + 0.5) * this._sideSquare,\n                        (i - this.heightField / 2 + 0.5) * this._sideSquare\n                    );\n                }\n            }\n        }\n    }\n\n    private fusionItems(movedItem: Node, numbers: Vec2): void {\n        const previousItem = this._fieldArray[numbers.y][numbers.x];\n        if (previousItem === movedItem) return;\n        let newItem = movedItem;\n        const oldNumbers = this.defineNumbers(movedItem);\n        if (previousItem) {\n            const previousItemScript = previousItem.getComponent(Item);\n            const movedItemScript = movedItem?.getComponent(Item);\n            if (previousItemScript.type === movedItemScript.type) {\n                previousItemScript.dropItem();\n                movedItemScript.transformationItem(previousItemScript.type + 1);\n            } else {\n                const numbersCopy = numbers;\n                numbers = this.findFreeCell(numbers, movedItem);\n                previousItemScript.transferItem(this.defineCellPosition(numbers));\n                this._fieldArray[numbersCopy.y][numbersCopy.x] = newItem;\n                newItem = previousItem;\n            }\n        }\n        this._fieldArray[oldNumbers.y][oldNumbers.x] = null;\n        this._fieldArray[numbers.y][numbers.x] = newItem;\n    }\n\n    private chooseNumbers(): Vec2 {\n        let numbers = new Vec2(0, 0);\n        while (this._fieldArray[numbers.y][numbers.x] !== null) {\n            numbers = new Vec2(\n                Math.floor(Math.random() * this.lengthField),\n                Math.floor(Math.random() * this.heightField)\n            );\n        }\n        return numbers;\n    }\n\n    private findFreeCell(numbers: Vec2, item: Node): Vec2 {\n        let newNumbers = new Vec2(this.lengthField * this.heightField, 0);\n        let distance = this.heightField * this.lengthField;\n        for (let i = 0; i < this.heightField; i++) {\n            for (let j = 0; j < this.lengthField; j++) {\n                if (!this._fieldArray[i][j] || this._fieldArray[i][j] === item) {\n                    const currentDistance = Math.sqrt(Math.pow(numbers.y - i, 2) + Math.pow(numbers.x - j, 2));\n                    if (currentDistance < distance) {\n                        distance = currentDistance;\n                        newNumbers = new Vec2(j, i);\n                    }\n                }\n            }\n        }\n        return newNumbers;\n    }\n}\n"]}